{"ast":null,"code":"import { TaskService } from \"../../task.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = a0 => [\"/lists\", a0];\nconst _c1 = a0 => [\"/edit-list/\", a0];\nconst _c2 = a0 => ({\n  \"completed\": a0\n});\nconst _c3 = (a0, a1) => [\"/lists\", a0, \"edit-task\", a1];\nfunction TaskViewComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 9)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const list_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r1._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r1.title);\n  }\n}\nfunction TaskViewComponent_div_10_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_10_div_16_Template_div_click_0_listener() {\n      const task_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onTaskClick(task_r5));\n    });\n    i0.ɵɵelementStart(1, \"div\", 26)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 27)(5, \"button\", 28)(6, \"span\", 29);\n    i0.ɵɵelement(7, \"i\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_10_div_16_Template_button_click_8_listener() {\n      const task_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onDeleteTaskClick(task_r5._id));\n    });\n    i0.ɵɵelementStart(9, \"span\", 29);\n    i0.ɵɵelement(10, \"i\", 32);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c2, task_r5.completed));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r5.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction2(5, _c3, ctx_r2.selectedListId, task_r5._id));\n  }\n}\nfunction TaskViewComponent_div_10_h3_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 33);\n    i0.ɵɵtext(1, \"Click the + button to create a new task.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskViewComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 10)(2, \"h1\", 3);\n    i0.ɵɵtext(3, \" Tasks \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11)(5, \"div\", 12)(6, \"button\", 13)(7, \"span\", 14);\n    i0.ɵɵelement(8, \"i\", 15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 16)(10, \"div\", 17)(11, \"a\", 18);\n    i0.ɵɵtext(12, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"a\", 19);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_10_Template_a_click_13_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onDeleteListClick());\n    });\n    i0.ɵɵtext(14, \" Delete \");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(15, \"div\", 20);\n    i0.ɵɵtemplate(16, TaskViewComponent_div_10_div_16_Template, 11, 8, \"div\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, TaskViewComponent_div_10_h3_17_Template, 2, 0, \"h3\", 22);\n    i0.ɵɵelementStart(18, \"button\", 23)(19, \"span\", 14);\n    i0.ɵɵelement(20, \"i\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c1, ctx_r2.selectedListId));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.tasks);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.tasks.length === 0);\n  }\n}\nfunction TaskViewComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 33);\n    i0.ɵɵtext(2, \"Please select a list from the sidebar\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let TaskViewComponent = /*#__PURE__*/(() => {\n  class TaskViewComponent {\n    constructor(taskService, route, router) {\n      this.taskService = taskService;\n      this.route = route;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        if (params.listId) {\n          this.selectedListId = params.listId;\n          this.taskService.getTasks(params.listId).subscribe(tasks => {\n            this.tasks = tasks;\n          });\n        } else {\n          this.tasks = undefined;\n        }\n      });\n      this.taskService.getLists().subscribe(lists => {\n        this.lists = lists;\n      });\n    }\n    onTaskClick(task) {\n      this.taskService.complete(task).subscribe(() => {\n        console.log(\"Completed successfully\");\n        task.completed = !task.completed;\n      });\n    }\n    onDeleteListClick() {\n      this.taskService.deleteList(this.selectedListId).subscribe(list => {\n        this.router.navigate(['/lists']);\n      });\n    }\n    onDeleteTaskClick(id) {\n      this.taskService.deleteTask(this.selectedListId, id).subscribe(task => {\n        //Produces task arr without that task and then assigns to task arr\n        this.tasks = this.tasks.filter(val => val._id !== id);\n        console.log(task);\n      });\n    }\n    static #_ = this.ɵfac = function TaskViewComponent_Factory(t) {\n      return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskViewComponent,\n      selectors: [[\"app-task-view\"]],\n      decls: 12,\n      vars: 3,\n      consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\", \"scrollable-area\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [4, \"ngIf\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"], [1, \"top-bar\"], [1, \"dropdown\", \"is-hoverable\", \"is-right\"], [1, \"dropdown-trigger\"], [\"aria-haspopup\", \"true\", 1, \"button\"], [1, \"icon\", \"is-small\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-cog\"], [\"id\", \"dropdown-menu4\", \"role\", \"menu\", 1, \"dropdown-menu\"], [1, \"dropdown-content\"], [1, \"dropdown-item\", 3, \"routerLink\"], [1, \"dropdown-item\", \"has-text-danger\", 3, \"click\"], [1, \"scrollable-area\"], [\"class\", \"task\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"empty-state-text\", 4, \"ngIf\"], [\"routerLink\", \"./new-task\", 1, \"button\", \"circle-add-button\", \"is-primary\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-plus\"], [1, \"task\", 3, \"click\", \"ngClass\"], [1, \"task-text\"], [1, \"task-buttons\"], [1, \"button\", \"is-small\", 3, \"routerLink\"], [1, \"icon\"], [1, \"fas\", \"fa-edit\"], [1, \"button\", \"is-danger\", \"is-small\", 2, \"margin-left\", \"10px\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [1, \"empty-state-text\"]],\n      template: function TaskViewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \" Lists \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵtemplate(6, TaskViewComponent_a_6_Template, 3, 4, \"a\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 6);\n          i0.ɵɵtext(8, \"+ New List\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 7);\n          i0.ɵɵtemplate(10, TaskViewComponent_div_10_Template, 21, 5, \"div\", 8)(11, TaskViewComponent_div_11_Template, 3, 0, \"div\", 8);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.tasks);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.tasks);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i2.RouterLink, i2.RouterLinkActive],\n      styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%]; (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap var __webpack_modules__ = ({211: (() => {throw new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):nCan't find stylesheet to import.n   \\\\2577n24 \\\\2502  @import '../node_modules/bulma/bulma.sass';n   \\\\2502          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^n   \\\\2575n  src\\\\\\\\styles.scss 24:9                                  @importn  src\\\\\\\\app\\\\\\\\pages\\\\\\\\task-view\\\\\\\\task-view.component.scss 1:9  root stylesheet\\\");})}); // startup // Load entry module and return exports // This entry module doesn\\\"t tell about it\\\"s top-level declarations so it can't be inlined\\nvar __webpack_exports__ = {}; __webpack_modules__[211](); resource = __webpack_exports__;})()[_ngcontent-%COMP%]   ;[_ngcontent-%COMP%]{}\"]\n    });\n  }\n  return TaskViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}